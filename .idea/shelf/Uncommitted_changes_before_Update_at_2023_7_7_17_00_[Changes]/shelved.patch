Index: cn_tedu_v1/src/main/java/cn/tedu/cn_tedu_v1/userv1/controller/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cn.tedu.cn_tedu_v1.userv1.controller;\r\n\r\n\r\nimport cn.tedu.cn_tedu_v1.userv1.SnowflakeIdGenerator;\r\nimport cn.tedu.cn_tedu_v1.userv1.mapper.EmailForGetMapper;\r\nimport cn.tedu.cn_tedu_v1.userv1.mapper.SecurityMapper;\r\nimport cn.tedu.cn_tedu_v1.userv1.mapper.UserMapper;\r\nimport cn.tedu.cn_tedu_v1.userv1.pojo.dto.EmailDTO;\r\nimport cn.tedu.cn_tedu_v1.userv1.pojo.dto.SecurityDTO;\r\nimport cn.tedu.cn_tedu_v1.userv1.pojo.dto.UserRegDTO;\r\nimport cn.tedu.cn_tedu_v1.userv1.pojo.entiy.Security;\r\nimport cn.tedu.cn_tedu_v1.userv1.pojo.entiy.User;\r\nimport cn.tedu.cn_tedu_v1.userv1.pojo.vo.EmailForGetVO;\r\nimport cn.tedu.cn_tedu_v1.userv1.pojo.vo.UserLoginResultVO;\r\nimport cn.tedu.cn_tedu_v1.userv1.pojo.vo.UserVO;\r\nimport cn.tedu.cn_tedu_v1.userv1.response.ResultVO;\r\nimport cn.tedu.cn_tedu_v1.userv1.response.StatusCode;\r\nimport cn.tedu.cn_tedu_v1.userv1.security.CustomUserDetails;\r\nimport com.alibaba.fastjson.JSON;\r\nimport io.jsonwebtoken.Jwts;\r\nimport io.jsonwebtoken.SignatureAlgorithm;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.beans.BeanUtils;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.beans.factory.annotation.Value;\r\nimport org.springframework.mail.SimpleMailMessage;\r\nimport org.springframework.mail.javamail.JavaMailSender;\r\nimport org.springframework.security.authentication.AuthenticationManager;\r\nimport org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\r\nimport org.springframework.security.core.Authentication;\r\nimport org.springframework.security.core.GrantedAuthority;\r\nimport org.springframework.security.core.context.SecurityContextHolder;\r\nimport org.springframework.security.crypto.password.PasswordEncoder;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\n\r\nimport javax.servlet.http.HttpSession;\r\nimport java.util.*;\r\nimport java.util.concurrent.atomic.AtomicInteger;\r\n\r\n/**\r\n * 处理用户登录注册页面业务流程,检查登录状态\r\n * @author bmy\r\n *\r\n */\r\n@RestController\r\n@RequestMapping(\"/v1/users/\")\r\n@Slf4j\r\npublic class UserController {\r\n\r\n    //static AtomicInteger times = new AtomicInteger(3);\r\n    static AtomicInteger verification = new AtomicInteger(3);\r\n\r\n    @Autowired\r\n    private UserMapper userMapper;\r\n    @Autowired\r\n    private SecurityMapper securityMapper;\r\n\r\n    @Autowired\r\n    PasswordEncoder passwordEncoder;\r\n    @Autowired\r\n    private JavaMailSender javaMailSender;\r\n\r\n    @Value(\"${cn-tedu.jwt.duration-in-minute}\")\r\n    public Integer durationInMinute;\r\n\r\n    @Value(\"${cn-tedu.jwt.secret-key}\")\r\n    public String securityKey;\r\n\r\n\r\n    /**\r\n     * 发送邮件功能\r\n     * @param email  接受验证码邮箱\r\n     * @param httpSession 服务器缓存\r\n     * @return 响应结果\r\n     */\r\n    @GetMapping(\"send\")\r\n    public ResultVO send(@RequestParam(\"email\") String email, HttpSession httpSession) {\r\n        log.debug(\"email:{}\",email);\r\n        //生成四位随机验证码\r\n        Integer code = new Random().nextInt(8999) + 1000;\r\n        log.debug(\"验证码:{}\",code);\r\n        //用于创建简单的邮件消息。通过SimpleMailMessage对象，\r\n        // 你可以设置邮件的发送者、接收者、主题、正文等信息。\r\n        SimpleMailMessage message = new SimpleMailMessage();\r\n        //主题\r\n        message.setSubject(\"验证码验证\");\r\n        //正文\r\n        message.setText(\"验证码:\" + code);\r\n        //接受邮箱\r\n        message.setTo(email);\r\n        //发送者邮箱\r\n        message.setFrom(\"1129729148@qq.com\");\r\n        //发送\r\n        javaMailSender.send(message);\r\n        //验证码缓存两分钟\r\n        httpSession.setAttribute(\"code\", code);\r\n        httpSession.setMaxInactiveInterval(120);//2分钟\r\n        return new ResultVO(StatusCode.SUCCESS);\r\n    }\r\n\r\n    /**\r\n     * 注册功能\r\n     * @param userRegDTO 用户输入内容\r\n     * @param httpSession  服务器缓存\r\n     * @return\r\n     */\r\n    @PostMapping(\"reg\")\r\n    public ResultVO insert(@RequestBody UserRegDTO userRegDTO, HttpSession httpSession) {\r\n        System.out.println(\"userRegDTO = \" + userRegDTO.getCode() + \", httpSession = \" + httpSession.getAttribute(\"code\"));\r\n        //判断邮箱是否存在\r\n        System.out.println(\"userRegDTO = \" + userRegDTO );\r\n        if (userMapper.selectByEmail(userRegDTO.getEmail()) != 0) {\r\n            return new ResultVO(StatusCode.EMAIL_EXISTS_ERROR);\r\n        }\r\n\r\n        //判断验证码与缓存的验证码是否一致\r\n        if (!userRegDTO.getCode().equals(String.valueOf(httpSession.getAttribute(\"code\")))) {\r\n            return new ResultVO(StatusCode.VERIFICATION_ERROR);\r\n        }\r\n\r\n        System.out.println(\"userRegDTO = \" + userRegDTO);\r\n\r\n        UserVO userVO = userMapper.selectByUserName(userRegDTO.getUsername());\r\n        if (userVO != null) {//代表用户名已存在\r\n            return new ResultVO(StatusCode.REPEAT_USER);\r\n        }\r\n        User user = new User();\r\n        BeanUtils.copyProperties(userRegDTO, user);\r\n        user.setCreateTime(new Date());\r\n        //生成用户ID\r\n        SnowflakeIdGenerator idGenerator = new SnowflakeIdGenerator(1, 1);\r\n        user.setUserId(idGenerator.nextId());\r\n\r\n        //初始赋权全部赋权用户权限\r\n        user.setAdmin(\"user\");\r\n\r\n        //让密码加密\r\n        user.setPassword(passwordEncoder.encode(user.getPassword()));\r\n\r\n        userMapper.insert(user);\r\n\r\n        System.out.println(\"userRegDTO = \" + userRegDTO);\r\n\r\n        //密保问题答案插入\r\n        Long userId = user.getId();\r\n        Security security = new Security();\r\n        BeanUtils.copyProperties(userRegDTO, security);\r\n        security.setUserId(userId);\r\n        System.out.println(security);\r\n        userMapper.insertSecurity(security);\r\n        return new ResultVO(StatusCode.SUCCESS);\r\n\r\n\r\n    }\r\n\r\n    @Autowired\r\n    private AuthenticationManager manager;\r\n\r\n    /**\r\n     * 登录功能\r\n     * @param userRegDTO 接受用户输入的账号密码\r\n     * @return\r\n     */\r\n    @PostMapping(\"login\")\r\n    public ResultVO login(@RequestBody UserRegDTO userRegDTO) {\r\n        log.debug(\"登录请求传入的参数{}\",userRegDTO);\r\n        UserVO userVO = userMapper.selectByUserName(userRegDTO.getUsername());\r\n        log.debug(\"根据用户名查询到的userVO:{}\",userVO);\r\n        Authentication result = manager.authenticate(new UsernamePasswordAuthenticationToken(\r\n                userRegDTO.getUsername(), userRegDTO.getPassword()));\r\n        log.debug(\"验证用户登录成功返回来的登陆结果{}\",result);\r\n\r\n        Object principal = result.getPrincipal();\r\n        //这个就是UserDetailServiceImpl类中返回的UserDetails对象数据\r\n        log.debug(\"从认证结果中获取到当事人{}\",principal);\r\n        CustomUserDetails customUserDetails = (CustomUserDetails) principal;\r\n        Long id = customUserDetails.getId();\r\n        log.debug(\"从认证结果中的当事人中获取到的ID:{}\", id);\r\n\r\n        String username = customUserDetails.getUsername();\r\n        log.debug(\"从认证结果中的当事人中获取到的昵称:{}\", username);\r\n\r\n        Collection<GrantedAuthority> authorities = customUserDetails.getAuthorities();\r\n        log.debug(\"从认证结果中的当事人中获取到的权限:{}\", authorities);\r\n\r\n        String authoritiesJsonString = JSON.toJSONString(authorities);\r\n        log.debug(\"将权限列表对象转换为JSON格式的字符串：{}\", authoritiesJsonString);\r\n        Date date = new Date(System.currentTimeMillis() + 1L * 60 * 1000 * durationInMinute);\r\n        Map<String, Object> claims = new HashMap<>();\r\n        claims.put(\"id\", id);\r\n        claims.put(\"username\", username);\r\n        claims.put(\"authoritiesJsonString\", authoritiesJsonString);\r\n        String jwt = Jwts.builder()\r\n                .setHeaderParam(\"alg\", \"HS256\")\r\n                .setHeaderParam(\"typ\", \"JWT\")\r\n                .setClaims(claims)\r\n                .setExpiration(date)\r\n                .signWith(SignatureAlgorithm.HS256, securityKey)\r\n                .compact();\r\n\r\n        UserLoginResultVO userLoginResultVO = new UserLoginResultVO()\r\n                .setId(id)\r\n                .setUsername(username)\r\n                .setAdmin(authorities)\r\n                .setToken(jwt);\r\n        return new ResultVO(StatusCode.SUCCESS,userLoginResultVO);\r\n\r\n\r\n\r\n        //将认证结果保存到Security上下文中   让Security框架记住登录状态\r\n//        SecurityContextHolder.getContext().setAuthentication(result);\r\n       // return new ResultVO(result.getPrincipal());\r\n    }\r\n\r\n    /**\r\n     * 忘记密码密保修改密码业务逻辑\r\n     * @param securityDTO 接受用户输入数据\r\n     * @return 响应对象\r\n     */\r\n    @PostMapping(\"forget\")\r\n    public ResultVO forget(@RequestBody SecurityDTO securityDTO) {\r\n        System.out.println(verification.get());\r\n        if (verification.get() == 0) {\r\n            return ForgetThePassword(verification.get());\r\n        }\r\n        System.out.println(\"securityDTO = \" + securityDTO);\r\n        //得到用户密保问题\r\n        //增加修改密码,页面增加两次密码输入框,确认两次密码是否一一致,在前端页面forget.html判断,DTO,\r\n        //里面增加属性密码,判断密保问题正确后同时修改库里密码\r\n        Security security = securityMapper.SecurityBySecurity(securityDTO.getUsername());\r\n        if (security == null)\r\n            return ForgetThePassword(verification.decrementAndGet());\r\n        if (securityDTO.getQuestion().equals(security.getQuestion())) {\r\n            if (securityDTO.getAnswer().equals(security.getAnswer())) {\r\n                //\r\n                verification.set(3);\r\n                //加密修改好的密码\r\n                securityDTO.setPassword(passwordEncoder.encode(securityDTO.getPassword()));\r\n                securityMapper.passwordUpdate(securityDTO);\r\n                return new ResultVO(StatusCode.SUCCESS);\r\n            }\r\n            return ForgetThePassword(verification.decrementAndGet());\r\n        }\r\n        return ForgetThePassword(verification.decrementAndGet());\r\n    }\r\n\r\n\r\n    @Autowired\r\n    private EmailForGetMapper emailForGetMapper;\r\n\r\n    /**\r\n     * 忘记密码邮箱修改密码业务逻辑\r\n     * @param emailDTO 用户输入的邮箱\r\n     * @param session 服务器缓存\r\n     * @return 给前端返回响应对象\r\n     */\r\n    @PostMapping(\"forget-email\")\r\n    public ResultVO forgetEmail(@RequestBody EmailDTO emailDTO,HttpSession session) {\r\n        System.out.println(\"emailDTO = \" + emailDTO);\r\n        EmailForGetVO emailForGetVO = emailForGetMapper.selectByEmail(emailDTO.getEmail());\r\n        if (emailForGetVO == null) {\r\n            return new ResultVO(StatusCode.NOT_EMAIL_ERROR);\r\n        }\r\n        //判断验证码与缓存的验证码是否一致\r\n        if (!emailDTO.getCode().equals(String.valueOf(session.getAttribute(\"code\")))) {\r\n            return new ResultVO(StatusCode.VERIFICATION_ERROR);\r\n        }\r\n\r\n        //加密密码\r\n        emailDTO.setPassword(passwordEncoder.encode(emailDTO.getPassword()));\r\n        emailForGetMapper.updateByEmail(emailDTO);\r\n\r\n        sendUserName(emailForGetVO.getEmail(),emailForGetVO.getUserName());\r\n\r\n        return new ResultVO(StatusCode.SUCCESS,emailForGetVO);\r\n    }\r\n\r\n\r\n\r\n\r\n    //登陆状态检查--检查用户进入网站后是否登录--展示首页页面不同\r\n   /* @GetMapping(\"currentUser\")\r\n    public UserVO currentUser(HttpSession session) {\r\n        UserVO userVO = (UserVO) session.getAttribute(\"user\");\r\n        return userVO;\r\n    }*/\r\n\r\n    /**\r\n     * 忘记密码验证成功后,发送邮件方法\r\n     * @param toEmail 收件邮箱\r\n     * @param userName 用户名\r\n     */\r\n    public void sendUserName(String toEmail,String userName) {\r\n        System.out.println(\"toEmail = \" + toEmail + \", userName = \" + userName);\r\n        SimpleMailMessage message = new SimpleMailMessage();\r\n        message.setSubject(\"用户名发送\");\r\n        message.setText(\"用户名:\" + userName +\"请妥善保存\");\r\n        message.setTo(toEmail);\r\n        message.setFrom(\"1129729148@qq.com\");\r\n\r\n\r\n        javaMailSender.send(message);\r\n\r\n    }\r\n\r\n    //退出登录\r\n    @GetMapping(\"logout\")\r\n    public void logout() {\r\n        //从Security框架中删除认证数据\r\n        SecurityContextHolder.clearContext();\r\n    }\r\n\r\n    /**\r\n     * 忘记密码判断密选择及答案是否正确\r\n     * @param verification 次数\r\n     * @return 响应对象\r\n     */\r\n    public ResultVO ForgetThePassword(int verification) {\r\n        switch (verification) {\r\n            case 2:\r\n                return new ResultVO(StatusCode.QUESTION_ERROR_TWICE);\r\n            case 1:\r\n                return new ResultVO(StatusCode.QUESTION_ERROR_ONCE);\r\n            case 0:\r\n                return new ResultVO(StatusCode.QUESTION_ERROR);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    //判断times登录错误次数,用于抛出对应异常\r\n//    public ResultVO NumberOfJudgments(int times) {\r\n//        switch (times) {\r\n//            case 2:\r\n//                return new ResultVO(StatusCode.PASSWORD_ERROR_TWICE);\r\n//            case 1:\r\n//                return new ResultVO(StatusCode.PASSWORD_ERROR_ONCE);\r\n//            case 0:\r\n//                return new ResultVO(StatusCode.PASSWORD_ERROR);\r\n//        }\r\n//\r\n//        return null;\r\n//    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cn_tedu_v1/src/main/java/cn/tedu/cn_tedu_v1/userv1/controller/UserController.java b/cn_tedu_v1/src/main/java/cn/tedu/cn_tedu_v1/userv1/controller/UserController.java
--- a/cn_tedu_v1/src/main/java/cn/tedu/cn_tedu_v1/userv1/controller/UserController.java	(revision 2f0c8eca6d82f42aa32f414767990cd9fd9131b2)
+++ b/cn_tedu_v1/src/main/java/cn/tedu/cn_tedu_v1/userv1/controller/UserController.java	(date 1688719866647)
@@ -13,6 +13,7 @@
 import cn.tedu.cn_tedu_v1.userv1.pojo.vo.EmailForGetVO;
 import cn.tedu.cn_tedu_v1.userv1.pojo.vo.UserLoginResultVO;
 import cn.tedu.cn_tedu_v1.userv1.pojo.vo.UserVO;
+import cn.tedu.cn_tedu_v1.userv1.redis.IRedisCode;
 import cn.tedu.cn_tedu_v1.userv1.response.ResultVO;
 import cn.tedu.cn_tedu_v1.userv1.response.StatusCode;
 import cn.tedu.cn_tedu_v1.userv1.security.CustomUserDetails;
@@ -70,12 +71,15 @@
 
     /**
      * 发送邮件功能
+     *
      * @param email  接受验证码邮箱
      * @param httpSession 服务器缓存
      * @return 响应结果
      */
+    @Autowired
+    private IRedisCode redisCode;
     @GetMapping("send")
-    public ResultVO send(@RequestParam("email") String email, HttpSession httpSession) {
+    public ResultVO send(@RequestParam("email") String email) {
         log.debug("email:{}",email);
         //生成四位随机验证码
         Integer code = new Random().nextInt(8999) + 1000;
@@ -93,9 +97,10 @@
         message.setFrom("1129729148@qq.com");
         //发送
         javaMailSender.send(message);
-        //验证码缓存两分钟
-        httpSession.setAttribute("code", code);
-        httpSession.setMaxInactiveInterval(120);//2分钟
+        //验证码缓存redis两分钟
+        redisCode.saveEmailCode(email,code);
+//        httpSession.setAttribute("code", code);
+//        httpSession.setMaxInactiveInterval(120);//2分钟
         return new ResultVO(StatusCode.SUCCESS);
     }
 
@@ -107,15 +112,15 @@
      */
     @PostMapping("reg")
     public ResultVO insert(@RequestBody UserRegDTO userRegDTO, HttpSession httpSession) {
-        System.out.println("userRegDTO = " + userRegDTO.getCode() + ", httpSession = " + httpSession.getAttribute("code"));
+        System.out.println("userRegDTO = " + userRegDTO.getCode());
         //判断邮箱是否存在
         System.out.println("userRegDTO = " + userRegDTO );
         if (userMapper.selectByEmail(userRegDTO.getEmail()) != 0) {
             return new ResultVO(StatusCode.EMAIL_EXISTS_ERROR);
         }
-
+        //httpSession.getAttribute("code")
         //判断验证码与缓存的验证码是否一致
-        if (!userRegDTO.getCode().equals(String.valueOf(httpSession.getAttribute("code")))) {
+        if (!userRegDTO.getCode().equals(String.valueOf(redisCode.getEmailCode(userRegDTO.getEmail())))) {
             return new ResultVO(StatusCode.VERIFICATION_ERROR);
         }
 
@@ -256,14 +261,15 @@
      * @return 给前端返回响应对象
      */
     @PostMapping("forget-email")
-    public ResultVO forgetEmail(@RequestBody EmailDTO emailDTO,HttpSession session) {
+    public ResultVO forgetEmail(@RequestBody EmailDTO emailDTO) {
         System.out.println("emailDTO = " + emailDTO);
         EmailForGetVO emailForGetVO = emailForGetMapper.selectByEmail(emailDTO.getEmail());
         if (emailForGetVO == null) {
             return new ResultVO(StatusCode.NOT_EMAIL_ERROR);
         }
+        //session.getAttribute("code")
         //判断验证码与缓存的验证码是否一致
-        if (!emailDTO.getCode().equals(String.valueOf(session.getAttribute("code")))) {
+        if (!emailDTO.getCode().equals(String.valueOf(redisCode.getEmailCode(emailDTO.getEmail())))) {
             return new ResultVO(StatusCode.VERIFICATION_ERROR);
         }
 
Index: cn_tedu_v1/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-parent</artifactId>\r\n        <version>2.5.0</version>\r\n        <relativePath/> <!-- lookup parent from repository -->\r\n    </parent>\r\n    <groupId>cn.tedu</groupId>\r\n    <artifactId>cn_tedu_v1</artifactId>\r\n    <version>0.0.1-SNAPSHOT</version>\r\n    <name>cn_tedu_v1</name>\r\n    <description>Demo project for Spring Boot</description>\r\n    <properties>\r\n        <java.version>1.8</java.version>\r\n    </properties>\r\n    <dependencies>\r\n\r\n        <!-- Spring Boot支持Spring Security的依赖项，用于处理认证与授权 -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-security</artifactId>\r\n        </dependency>\r\n\r\n        <!-- email辅助包 -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-mail</artifactId>\r\n            <version>2.5.1</version>\r\n        </dependency>\r\n        <!-- Knife4j Spring Boot：在线API文档 -->\r\n        <dependency>\r\n            <groupId>com.github.xiaoymin</groupId>\r\n            <artifactId>knife4j-spring-boot-starter</artifactId>\r\n            <version>2.0.9</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n        </dependency>\r\n\r\n\r\n        <!--Spring Validation依赖-->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-validation</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.mybatis.spring.boot</groupId>\r\n            <artifactId>mybatis-spring-boot-starter</artifactId>\r\n            <version>2.3.1</version>\r\n        </dependency>\r\n\r\n        <!-- MySQL -->\r\n        <dependency>\r\n            <groupId>mysql</groupId>\r\n            <artifactId>mysql-connector-java</artifactId>\r\n            <scope>runtime</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>druid-spring-boot-starter</artifactId>\r\n            <version>1.2.16</version>\r\n        </dependency>\r\n\r\n        <!-- MyBatis整合Spring Boot的依赖项 -->\r\n        <dependency>\r\n            <groupId>com.baomidou</groupId>\r\n            <artifactId>mybatis-plus-boot-starter</artifactId>\r\n            <version>3.3.0</version>\r\n        </dependency>\r\n\r\n\r\n\r\n        <!-- PageHelper：专用于MyBatis的分页框架 -->\r\n        <dependency>\r\n            <groupId>com.github.pagehelper</groupId>\r\n            <artifactId>pagehelper-spring-boot-starter</artifactId>\r\n            <version>1.3.0</version>\r\n        </dependency>\r\n\r\n        <!-- fastjson：实现对象与JSON的相互转换 -->\r\n        <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>fastjson</artifactId>\r\n            <version>1.2.75</version>\r\n        </dependency>\r\n\r\n        <!-- JJWT（Java JWT） -->\r\n        <dependency>\r\n            <groupId>io.jsonwebtoken</groupId>\r\n            <artifactId>jjwt</artifactId>\r\n            <version>0.9.1</version>\r\n        </dependency>\r\n\r\n        <!--添加Knife4j依赖-->\r\n        <dependency>\r\n            <groupId>com.github.xiaoymin</groupId>\r\n            <artifactId>knife4j-openapi2-spring-boot-starter</artifactId>\r\n            <version>4.1.0</version>\r\n        </dependency>\r\n\r\n\r\n    </dependencies>\r\n\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cn_tedu_v1/pom.xml b/cn_tedu_v1/pom.xml
--- a/cn_tedu_v1/pom.xml	(revision 2f0c8eca6d82f42aa32f414767990cd9fd9131b2)
+++ b/cn_tedu_v1/pom.xml	(date 1688714296905)
@@ -24,6 +24,12 @@
             <artifactId>spring-boot-starter-security</artifactId>
         </dependency>
 
+        <!-- Spring Boot支持Redis编程的依赖项 -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-redis</artifactId>
+        </dependency>
+
         <!-- email辅助包 -->
         <dependency>
             <groupId>org.springframework.boot</groupId>
Index: cn_tedu_v1/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>server.port=8081\r\nspring.datasource.url=jdbc:mysql://localhost:3306/zhipian_shop?characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\nspring.datasource.username=root\r\nspring.datasource.password=root\r\n\r\nmybatis-plus.mapper-locations= classpath:mappers/**/*.xml\r\n\r\n\r\n\r\n## mybits?pojo??????????,?:userName == user_name\r\n## ????\r\nmybatis.configuration.map-underscore-to-camel-case=true\r\n\r\n## ??????\r\nspring.mail.protocol=smtp\r\n##???????\r\nspring.mail.host=smtp.qq.com\r\nspring.mail.port=587\r\n##?????\r\nspring.mail.username=1129729148@qq.com\r\nspring.mail.from=1129729148@qq.com\r\n## ???\r\n\r\nspring.mail.password=toenatgndycnhfif\r\nspring.mail.default-encoding=utf-8\r\nspring.mail.properties.mail.debug=true\r\nspring.mail.properties.mail.smtp.auth=true\r\n\r\n# JWT????????????\r\ncn-tedu.jwt.duration-in-minute: 86400\r\n# JWT?secretKey\r\ncn-tedu.jwt.secret-key: fNesMDkqrJFdsfDSwAbFLJ8SnsHJ438AF72D73aKJSmfdsafdLKKAFKDSJ\r\n\r\n# ????\r\nlogging.level.cn.tedu.cn_tedu_v1: trace\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/cn_tedu_v1/src/main/resources/application.properties b/cn_tedu_v1/src/main/resources/application.properties
--- a/cn_tedu_v1/src/main/resources/application.properties	(revision 2f0c8eca6d82f42aa32f414767990cd9fd9131b2)
+++ b/cn_tedu_v1/src/main/resources/application.properties	(date 1688719374380)
@@ -6,6 +6,9 @@
 mybatis-plus.mapper-locations= classpath:mappers/**/*.xml
 
 
+## redis配置
+spring.redis.host= localhost
+spring.redis.port= 6379
 
 ## mybits?pojo??????????,?:userName == user_name
 ## ????
Index: .idea/libraries/Maven__io_netty_netty_codec_4_1_65_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_netty_netty_codec_4_1_65_Final.xml b/.idea/libraries/Maven__io_netty_netty_codec_4_1_65_Final.xml
new file mode 100644
--- /dev/null	(date 1688714307409)
+++ b/.idea/libraries/Maven__io_netty_netty_codec_4_1_65_Final.xml	(date 1688714307409)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.netty:netty-codec:4.1.65.Final">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/netty/netty-codec/4.1.65.Final/netty-codec-4.1.65.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/netty/netty-codec/4.1.65.Final/netty-codec-4.1.65.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/netty/netty-codec/4.1.65.Final/netty-codec-4.1.65.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_netty_netty_common_4_1_65_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_netty_netty_common_4_1_65_Final.xml b/.idea/libraries/Maven__io_netty_netty_common_4_1_65_Final.xml
new file mode 100644
--- /dev/null	(date 1688714307440)
+++ b/.idea/libraries/Maven__io_netty_netty_common_4_1_65_Final.xml	(date 1688714307440)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.netty:netty-common:4.1.65.Final">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/netty/netty-common/4.1.65.Final/netty-common-4.1.65.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/netty/netty-common/4.1.65.Final/netty-common-4.1.65.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/netty/netty-common/4.1.65.Final/netty-common-4.1.65.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_lettuce_lettuce_core_6_1_2_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_lettuce_lettuce_core_6_1_2_RELEASE.xml b/.idea/libraries/Maven__io_lettuce_lettuce_core_6_1_2_RELEASE.xml
new file mode 100644
--- /dev/null	(date 1688714307344)
+++ b/.idea/libraries/Maven__io_lettuce_lettuce_core_6_1_2_RELEASE.xml	(date 1688714307344)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.lettuce:lettuce-core:6.1.2.RELEASE">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/lettuce/lettuce-core/6.1.2.RELEASE/lettuce-core-6.1.2.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/lettuce/lettuce-core/6.1.2.RELEASE/lettuce-core-6.1.2.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/lettuce/lettuce-core/6.1.2.RELEASE/lettuce-core-6.1.2.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_netty_netty_buffer_4_1_65_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_netty_netty_buffer_4_1_65_Final.xml b/.idea/libraries/Maven__io_netty_netty_buffer_4_1_65_Final.xml
new file mode 100644
--- /dev/null	(date 1688714307377)
+++ b/.idea/libraries/Maven__io_netty_netty_buffer_4_1_65_Final.xml	(date 1688714307377)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.netty:netty-buffer:4.1.65.Final">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/netty/netty-buffer/4.1.65.Final/netty-buffer-4.1.65.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/netty/netty-buffer/4.1.65.Final/netty-buffer-4.1.65.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/netty/netty-buffer/4.1.65.Final/netty-buffer-4.1.65.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_netty_netty_transport_4_1_65_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_netty_netty_transport_4_1_65_Final.xml b/.idea/libraries/Maven__io_netty_netty_transport_4_1_65_Final.xml
new file mode 100644
--- /dev/null	(date 1688714307515)
+++ b/.idea/libraries/Maven__io_netty_netty_transport_4_1_65_Final.xml	(date 1688714307515)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.netty:netty-transport:4.1.65.Final">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/netty/netty-transport/4.1.65.Final/netty-transport-4.1.65.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/netty/netty-transport/4.1.65.Final/netty-transport-4.1.65.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/netty/netty-transport/4.1.65.Final/netty-transport-4.1.65.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_projectreactor_reactor_core_3_4_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_projectreactor_reactor_core_3_4_6.xml b/.idea/libraries/Maven__io_projectreactor_reactor_core_3_4_6.xml
new file mode 100644
--- /dev/null	(date 1688714307548)
+++ b/.idea/libraries/Maven__io_projectreactor_reactor_core_3_4_6.xml	(date 1688714307548)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.projectreactor:reactor-core:3.4.6">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/projectreactor/reactor-core/3.4.6/reactor-core-3.4.6.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/projectreactor/reactor-core/3.4.6/reactor-core-3.4.6-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/projectreactor/reactor-core/3.4.6/reactor-core-3.4.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_netty_netty_handler_4_1_65_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_netty_netty_handler_4_1_65_Final.xml b/.idea/libraries/Maven__io_netty_netty_handler_4_1_65_Final.xml
new file mode 100644
--- /dev/null	(date 1688714307464)
+++ b/.idea/libraries/Maven__io_netty_netty_handler_4_1_65_Final.xml	(date 1688714307464)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.netty:netty-handler:4.1.65.Final">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/netty/netty-handler/4.1.65.Final/netty-handler-4.1.65.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/netty/netty-handler/4.1.65.Final/netty-handler-4.1.65.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/netty/netty-handler/4.1.65.Final/netty-handler-4.1.65.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_netty_netty_resolver_4_1_65_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_netty_netty_resolver_4_1_65_Final.xml b/.idea/libraries/Maven__io_netty_netty_resolver_4_1_65_Final.xml
new file mode 100644
--- /dev/null	(date 1688714307488)
+++ b/.idea/libraries/Maven__io_netty_netty_resolver_4_1_65_Final.xml	(date 1688714307488)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.netty:netty-resolver:4.1.65.Final">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/netty/netty-resolver/4.1.65.Final/netty-resolver-4.1.65.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/netty/netty-resolver/4.1.65.Final/netty-resolver-4.1.65.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/io/netty/netty-resolver/4.1.65.Final/netty-resolver-4.1.65.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: cn_tedu_v1/src/test/java/cn/tedu/cn_tedu_v1/RedisTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cn_tedu_v1/src/test/java/cn/tedu/cn_tedu_v1/RedisTests.java b/cn_tedu_v1/src/test/java/cn/tedu/cn_tedu_v1/RedisTests.java
new file mode 100644
--- /dev/null	(date 1688716679754)
+++ b/cn_tedu_v1/src/test/java/cn/tedu/cn_tedu_v1/RedisTests.java	(date 1688716679754)
@@ -0,0 +1,23 @@
+package cn.tedu.cn_tedu_v1;
+
+import cn.tedu.cn_tedu_v1.userv1.redis.IRedisCode;
+import org.junit.jupiter.api.Test;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+
+/**
+ * Author = bianmy
+ * DATE = 2023/7/7 15:56
+ */
+@SpringBootTest
+public class RedisTests {
+    @Autowired
+    IRedisCode redisCode;
+
+    @Test
+    void xxx() {
+        String email = "aqa";
+        Integer code = 1234;
+        redisCode.saveEmailCode(email,code);
+    }
+}
Index: .idea/libraries/Maven__org_springframework_data_spring_data_commons_2_5_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_data_spring_data_commons_2_5_1.xml b/.idea/libraries/Maven__org_springframework_data_spring_data_commons_2_5_1.xml
new file mode 100644
--- /dev/null	(date 1688714307735)
+++ b/.idea/libraries/Maven__org_springframework_data_spring_data_commons_2_5_1.xml	(date 1688714307735)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.data:spring-data-commons:2.5.1">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/org/springframework/data/spring-data-commons/2.5.1/spring-data-commons-2.5.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/org/springframework/data/spring-data-commons/2.5.1/spring-data-commons-2.5.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/org/springframework/data/spring-data-commons/2.5.1/spring-data-commons-2.5.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_data_spring_data_keyvalue_2_5_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_data_spring_data_keyvalue_2_5_1.xml b/.idea/libraries/Maven__org_springframework_data_spring_data_keyvalue_2_5_1.xml
new file mode 100644
--- /dev/null	(date 1688714307768)
+++ b/.idea/libraries/Maven__org_springframework_data_spring_data_keyvalue_2_5_1.xml	(date 1688714307768)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.data:spring-data-keyvalue:2.5.1">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/org/springframework/data/spring-data-keyvalue/2.5.1/spring-data-keyvalue-2.5.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/org/springframework/data/spring-data-keyvalue/2.5.1/spring-data-keyvalue-2.5.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/org/springframework/data/spring-data-keyvalue/2.5.1/spring-data-keyvalue-2.5.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_reactivestreams_reactive_streams_1_0_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_reactivestreams_reactive_streams_1_0_3.xml b/.idea/libraries/Maven__org_reactivestreams_reactive_streams_1_0_3.xml
new file mode 100644
--- /dev/null	(date 1688714307575)
+++ b/.idea/libraries/Maven__org_reactivestreams_reactive_streams_1_0_3.xml	(date 1688714307575)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.reactivestreams:reactive-streams:1.0.3">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/org/reactivestreams/reactive-streams/1.0.3/reactive-streams-1.0.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/org/reactivestreams/reactive-streams/1.0.3/reactive-streams-1.0.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/org/reactivestreams/reactive-streams/1.0.3/reactive-streams-1.0.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_redis_2_5_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_redis_2_5_0.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_redis_2_5_0.xml
new file mode 100644
--- /dev/null	(date 1688714307705)
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_redis_2_5_0.xml	(date 1688714307705)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.5.0">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.5.0/spring-boot-starter-data-redis-2.5.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.5.0/spring-boot-starter-data-redis-2.5.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/2.5.0/spring-boot-starter-data-redis-2.5.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_data_spring_data_redis_2_5_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_data_spring_data_redis_2_5_1.xml b/.idea/libraries/Maven__org_springframework_data_spring_data_redis_2_5_1.xml
new file mode 100644
--- /dev/null	(date 1688714307797)
+++ b/.idea/libraries/Maven__org_springframework_data_spring_data_redis_2_5_1.xml	(date 1688714307797)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.data:spring-data-redis:2.5.1">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/org/springframework/data/spring-data-redis/2.5.1/spring-data-redis-2.5.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/org/springframework/data/spring-data-redis/2.5.1/spring-data-redis-2.5.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/org/springframework/data/spring-data-redis/2.5.1/spring-data-redis-2.5.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_oxm_5_3_7.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_oxm_5_3_7.xml b/.idea/libraries/Maven__org_springframework_spring_oxm_5_3_7.xml
new file mode 100644
--- /dev/null	(date 1688714307827)
+++ b/.idea/libraries/Maven__org_springframework_spring_oxm_5_3_7.xml	(date 1688714307827)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-oxm:5.3.7">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/org/springframework/spring-oxm/5.3.7/spring-oxm-5.3.7.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/org/springframework/spring-oxm/5.3.7/spring-oxm-5.3.7-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$PROJECT_DIR$/../../../.m2/repository/org/springframework/spring-oxm/5.3.7/spring-oxm-5.3.7-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: cn_tedu_v1/src/main/java/cn/tedu/cn_tedu_v1/core/config/RedisConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cn_tedu_v1/src/main/java/cn/tedu/cn_tedu_v1/core/config/RedisConfiguration.java b/cn_tedu_v1/src/main/java/cn/tedu/cn_tedu_v1/core/config/RedisConfiguration.java
new file mode 100644
--- /dev/null	(date 1688718067785)
+++ b/cn_tedu_v1/src/main/java/cn/tedu/cn_tedu_v1/core/config/RedisConfiguration.java	(date 1688718067785)
@@ -0,0 +1,35 @@
+package cn.tedu.cn_tedu_v1.core.config;
+
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.data.redis.connection.RedisConnectionFactory;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.data.redis.serializer.RedisSerializer;
+
+import java.io.Serializable;
+
+/**
+ * Redis的配置类
+ * Author = bianmy
+ * DATE = 2023/7/7 15:22
+ */
+@Configuration
+@Slf4j
+public class RedisConfiguration {
+
+    public RedisConfiguration() {
+        log.debug("创建配置类对象：RedisConfiguration");
+    }
+
+    @Bean
+    public RedisTemplate<String, Serializable> redisTemplate(
+            RedisConnectionFactory redisConnectionFactory) {
+        RedisTemplate<String, Serializable> redisTemplate = new RedisTemplate<>();
+        redisTemplate.setConnectionFactory(redisConnectionFactory);
+        redisTemplate.setKeySerializer(RedisSerializer.string());
+        redisTemplate.setValueSerializer(RedisSerializer.json());
+        return redisTemplate;
+    }
+
+}
\ No newline at end of file
Index: cn_tedu_v1/src/main/java/cn/tedu/cn_tedu_v1/userv1/redis/IRedisCode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cn_tedu_v1/src/main/java/cn/tedu/cn_tedu_v1/userv1/redis/IRedisCode.java b/cn_tedu_v1/src/main/java/cn/tedu/cn_tedu_v1/userv1/redis/IRedisCode.java
new file mode 100644
--- /dev/null	(date 1688719469122)
+++ b/cn_tedu_v1/src/main/java/cn/tedu/cn_tedu_v1/userv1/redis/IRedisCode.java	(date 1688719469122)
@@ -0,0 +1,20 @@
+package cn.tedu.cn_tedu_v1.userv1.redis;
+
+/**
+ * 向redis中存储验证码
+ * Author = bianmy
+ * DATE = 2023/7/7 15:37
+ */
+public interface IRedisCode {
+    /**
+     * 向redis中存入邮箱验证码
+     */
+    void saveEmailCode(String emailCode,Integer code);
+
+    /**
+     * 从redis中取出验证码
+     * @param emailCode 邮箱
+     * @return
+     */
+    Integer getEmailCode(String emailCode);
+}
\ No newline at end of file
Index: cn_tedu_v1/src/main/java/cn/tedu/cn_tedu_v1/userv1/redis/impl/RedisCodeImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cn_tedu_v1/src/main/java/cn/tedu/cn_tedu_v1/userv1/redis/impl/RedisCodeImpl.java b/cn_tedu_v1/src/main/java/cn/tedu/cn_tedu_v1/userv1/redis/impl/RedisCodeImpl.java
new file mode 100644
--- /dev/null	(date 1688716544205)
+++ b/cn_tedu_v1/src/main/java/cn/tedu/cn_tedu_v1/userv1/redis/impl/RedisCodeImpl.java	(date 1688716544205)
@@ -0,0 +1,36 @@
+package cn.tedu.cn_tedu_v1.userv1.redis.impl;
+
+import cn.tedu.cn_tedu_v1.userv1.redis.IRedisCode;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.data.redis.core.RedisTemplate;
+
+import java.io.Serializable;
+import java.util.concurrent.TimeUnit;
+
+/**
+ * 向redis中存储验证码
+ * Author = bianmy
+ * DATE = 2023/7/7 15:38
+ */
+@Configuration
+@Slf4j
+public class RedisCodeImpl implements IRedisCode {
+
+
+    @Autowired
+    private RedisTemplate<String, Serializable> redisTemplate;
+    @Override
+    public void saveEmailCode(String emailCode,Integer code) {
+        log.debug("传入邮箱验证码:{},存储两分中",code);
+        redisTemplate.opsForValue().set(emailCode, code, 2, TimeUnit.MINUTES);
+    }
+
+    @Override
+    public Integer getEmailCode(String emailCode) {
+
+       return (Integer) redisTemplate.opsForValue().get(emailCode);
+
+    }
+}
\ No newline at end of file
